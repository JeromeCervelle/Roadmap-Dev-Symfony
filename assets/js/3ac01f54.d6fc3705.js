"use strict";(self.webpackChunkroadmap_symfony=self.webpackChunkroadmap_symfony||[]).push([[4547],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,f=d["".concat(i,".").concat(m)]||d[m]||c[m]||s;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<s;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5396:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=t(7462),o=t(3366),s=(t(7294),t(3905)),a=["components"],l={sidebar_position:3},i="Les contr\xf4leurs",u={unversionedId:"symfony/controleurs",id:"symfony/controleurs",isDocsHomePage:!1,title:"Les contr\xf4leurs",description:"Dans une application Symfony, et plus g\xe9n\xe9ralement dans une application qui suit le mod\xe8le MVC, les contr\xf4lleurs (C) sont des bouts de code (g\xe9n\xe9ralement des classes) qui sont charg\xe9s de faire le lien entre le mod\xe8le (M) et la vue (V). Ce sont des m\xe9thodes de ces classes qui sont appel\xe9es par le routeur lorsqu'une requ\xeate arrive.",source:"@site/docs/06-symfony/03-controleurs.md",sourceDirName:"06-symfony",slug:"/symfony/controleurs",permalink:"/Roadmap-Dev-Symfony/docs/symfony/controleurs",editUrl:"https://github.com/yoanbernabeu/Roadmap-Dev-Symfony/edit/main/docs/06-symfony/03-controleurs.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Le routage",permalink:"/Roadmap-Dev-Symfony/docs/symfony/routage"},next:{title:"Twig",permalink:"/Roadmap-Dev-Symfony/docs/symfony/twig"}},p=[{value:"Ressources",id:"ressources",children:[],level:2}],c={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"les-contr\xf4leurs"},"Les contr\xf4leurs"),(0,s.kt)("p",null,"Dans une application Symfony, et plus g\xe9n\xe9ralement dans une application qui suit le mod\xe8le MVC, les contr\xf4lleurs (C) sont des bouts de code (g\xe9n\xe9ralement des classes) qui sont charg\xe9s de faire le lien entre le mod\xe8le (M) et la vue (V). Ce sont des m\xe9thodes de ces classes qui sont appel\xe9es par le routeur lorsqu'une requ\xeate arrive. "),(0,s.kt)("p",null,"Prenons un exemple : "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"use App\\Repository\\PostRepository;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\n\nclass BlogController extends AbstractController\n{\n    #[Route('/blog/', name: 'blog_index')]\n    public function index(PostRepository $repo): Response\n    {\n        $posts = $repo->findAll();\n        return $this->render('blog/index.html.twig', [\n            'posts' => $posts\n        ]);\n    }\n}\n")),(0,s.kt)("p",null,"Dans le code ci-dessus, on d\xe9finit une classe ",(0,s.kt)("inlineCode",{parentName:"p"},"BlogController"),". Elle peut h\xe9riter du ",(0,s.kt)("inlineCode",{parentName:"p"},"AbstractController")," si on veut qu'elle puisse renvoyer une vue (ce qui est le cas ici). A l'int\xe9rieur, nous d\xe9finissons une m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"index"),", qui sera charg\xe9e de renvoyer la liste des articles d'un blog. Ici, elle est reli\xe9e \xe0 une route nomm\xe9e ",(0,s.kt)("inlineCode",{parentName:"p"},"blog_index")," qui r\xe9pond \xe0 l'adresse ",(0,s.kt)("inlineCode",{parentName:"p"},"/blog"),". "),(0,s.kt)("p",null,"Dans les param\xe8tres de cette methode, nous pouvons nous faire liver des services. Ici, nous injectons le service ",(0,s.kt)("inlineCode",{parentName:"p"},"PostRepository"),". Attention, cette injection en param\xe8tre d'un m\xe9thode ne fonctione que dans les m\xe9thodes des contr\xf4leurs. "),(0,s.kt)("p",null,"Dans cette m\xe9thode, nous faisons appel \xe0 la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"findAll()")," du service ",(0,s.kt)("inlineCode",{parentName:"p"},"BlogRepository"),", qui va nous renvoyer l'ensemble des articles, et nous l'assignons \xe0 une variable ",(0,s.kt)("inlineCode",{parentName:"p"},"$posts")),(0,s.kt)("p",null,"Puis nous retournons une vue situ\xe9e dans ",(0,s.kt)("inlineCode",{parentName:"p"},"templates/blog/index.html.twig")," \xe0 laquelle nous passons cette variable, dans un tableau associatif en second param\xe8tre de la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"render")," disponible sur la classe."),(0,s.kt)("h2",{id:"ressources"},"Ressources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://grafikart.fr/tutoriels/routing-1065#autoplay"},"Apprendre \xe0 cr\xe9er des contr\xf4leurs avec Symfony par Grafikart"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=X_mNHTGJb5M&ab_channel=NouvelleTechno"},"Apprendre \xe0 cr\xe9er des contr\xf4leurs avec Symfony par Nouvelle-Techno.fr")))))}d.isMDXComponent=!0}}]);