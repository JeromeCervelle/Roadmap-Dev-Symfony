"use strict";(self.webpackChunkroadmap_symfony=self.webpackChunkroadmap_symfony||[]).push([[8442],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=t.createContext({}),u=function(e){var n=t.useContext(a),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},c=function(e){var n=u(e.components);return t.createElement(a.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,f=m["".concat(a,".").concat(d)]||m[d]||p[d]||s;return r?t.createElement(f,i(i({ref:n},c),{},{components:r})):t.createElement(f,i({ref:n},c))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=m;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<s;u++)i[u]=r[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},11:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var t=r(7462),o=r(3366),s=(r(7294),r(3905)),i=["components"],l={sidebar_position:7},a="Les services",u={unversionedId:"symfony/services",id:"symfony/services",isDocsHomePage:!1,title:"Les services",description:"Lorsqu'on \xe9crit du code, on aime que celui-ci soit bien rang\xe9. On \xe9vite de faire de trop gros bouts de code, on pr\xe9f\xe8re les morceler en de petits morceaux, plus faciles \xe0 maintenir, \xe0 faire \xe9voluer et \xe0 d\xe9bugger. De m\xeame, on peut \xeatre amen\xe9 \xe0 vouloir r\xe9utiliser le m\xeame code \xe0 plusieurs endroits diff\xe9rents de l'application. Les services permettent de r\xe9pondre \xe0 cette probl\xe9matique.",source:"@site/docs/06-symfony/07-services.md",sourceDirName:"06-symfony",slug:"/symfony/services",permalink:"/Roadmap-Dev-Symfony/docs/symfony/services",editUrl:"https://github.com/yoanbernabeu/Roadmap-Dev-Symfony/edit/main/docs/06-symfony/07-services.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Les formulaires",permalink:"/Roadmap-Dev-Symfony/docs/symfony/formulaires"},next:{title:"Symfony et le JavaScript",permalink:"/Roadmap-Dev-Symfony/docs/symfony/JS-Symfony"}},c=[{value:"Ressources",id:"ressources",children:[],level:2}],p={toc:c};function m(e){var n=e.components,r=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"les-services"},"Les services"),(0,s.kt)("p",null,"Lorsqu'on \xe9crit du code, on aime que celui-ci soit bien rang\xe9. On \xe9vite de faire de trop gros bouts de code, on pr\xe9f\xe8re les morceler en de petits morceaux, plus faciles \xe0 maintenir, \xe0 faire \xe9voluer et \xe0 d\xe9bugger. De m\xeame, on peut \xeatre amen\xe9 \xe0 vouloir r\xe9utiliser le m\xeame code \xe0 plusieurs endroits diff\xe9rents de l'application. Les services permettent de r\xe9pondre \xe0 cette probl\xe9matique."),(0,s.kt)("p",null,"Symfony propose d\xe9j\xe0 des services tout en un, par exemple pour g\xe9rer des logs, envoyer des emails, g\xe9rer le cache, etc. Mais il est tout \xe0 fait possible de cr\xe9er ses propres services. De plus, un service peut tout \xe0 fait faire appel \xe0 d'autres services."),(0,s.kt)("p",null,"Prenons un exemple :"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"function SayHello(string $prenom, string $lang='EN') : string\n{\n   $hellos = [\n       'EN' => 'Hello',\n       'DE' => 'GutenTag',\n       'FR' => 'Bonjour',\n       'ES' => 'Hola'\n   ];\n\n   return $hellos[$lang] . ' ' . $prenom . '!';\n}\n")),(0,s.kt)("p",null,"Cette fonction prend en entr\xe9e un pr\xe9nom et \xe9ventuellement une langue et retourne ",(0,s.kt)("inlineCode",{parentName:"p"},"Bonjour")," suivi du pr\xe9nom dans cette langue."),(0,s.kt)("p",null,"Transformons la en service. Nous cr\xe9ons un fichier ",(0,s.kt)("inlineCode",{parentName:"p"},"HelloService.php")," que nous rangeons dans un dossier ",(0,s.kt)("inlineCode",{parentName:"p"},"services")),(0,s.kt)("p",null,"Dedans, nous \xe9crivons une classe : "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<?php\n\nnamespace App\\Service;\n\nclass HelloService\n{\n    public function SayHello(string $prenom, string $lang='EN'): string\n    {\n        $hellos = [\n            'EN' => 'Hello',\n            'DE' => 'GutenTag',\n            'FR' => 'Bonjour',\n            'ES' => 'Hola'\n        ];\n\n        return $hellos[$lang] . ' ' . $prenom . '!';\n    }\n}\n")),(0,s.kt)("p",null,"Si nous souhaitons faire appel \xe0 la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"SayHello")," de ce service dans une m\xe9thode d'un contr\xf4leur reli\xe9 \xe0 une route, nous pouvons injecter ce service dans les param\xe8tres de la m\xe9thode."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"use App\\Service\\HelloService;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\n#[Route('/hello/{firstname}', name: 'hello')]\npublic function hello(string $firstname, HelloService $helloService)\n{\n    $helloString = $helloService->SayHello($firstname, 'FR')\n\n    $response = new Response(\n        $helloString,\n        Response::HTTP_OK,\n        ['content-type' => 'text/html']\n    );\n\n    $response->send() \n}\n")),(0,s.kt)("p",null,"Si nous souhaitons utiliser ce service dans une m\xe9thode d'une autre classe, nous pouvons l'injecter gr\xe2ce au constructeur."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"use App\\Service\\HelloService;\n\nclass ServiceB\n{\n    public function __construct(\n        private HelloService $helloService\n    )\n    {}\n\n    public function something(): string\n    {\n        return $this->helloService->SayHello('John', 'EN');\n    }\n")),(0,s.kt)("h2",{id:"ressources"},"Ressources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=NgnRtEH8Yk4&ab_channel=NouvelleTechno"},"Apprendre \xe0 g\xe9rer les services avec Symfony par Nouvelle-Techno.fr"))))}m.isMDXComponent=!0}}]);