"use strict";(self.webpackChunkroadmap_symfony=self.webpackChunkroadmap_symfony||[]).push([[3280],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5581:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],u={sidebar_position:1},s="Le paradigme MVC",p={unversionedId:"bases-de-symfony/paradigme-mvc",id:"bases-de-symfony/paradigme-mvc",isDocsHomePage:!1,title:"Le paradigme MVC",description:"Le paradigme MVC est un design pattern bien connu dans les applications Web. Le `M` signifie le mod\xe8le, le `V` la vue et le `C` le contr\xf4leur C'est un mod\xe8le de conception qui a pour but de mieux organiser le code de l'application en le s\xe9parant en 3 couches abstraites distinctes.",source:"@site/docs/05-bases-de-symfony/01-paradigme-mvc.md",sourceDirName:"05-bases-de-symfony",slug:"/bases-de-symfony/paradigme-mvc",permalink:"/Roadmap-Dev-Symfony/docs/bases-de-symfony/paradigme-mvc",editUrl:"https://github.com/yoanbernabeu/Roadmap-Dev-Symfony/edit/main/docs/05-bases-de-symfony/01-paradigme-mvc.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"le langage php",permalink:"/Roadmap-Dev-Symfony/docs/php/xx-langage-php"},next:{title:"Introduction",permalink:"/Roadmap-Dev-Symfony/docs/symfony/introduction"}},l=[{value:"Ressources",id:"ressources",children:[],level:2}],c={toc:l};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"le-paradigme-mvc"},"Le paradigme MVC"),(0,i.kt)("p",null,"Le paradigme MVC est un design pattern bien connu dans les applications Web. Le ",(0,i.kt)("inlineCode",{parentName:"p"},"M")," signifie le mod\xe8le, le ",(0,i.kt)("inlineCode",{parentName:"p"},"V")," la vue et le ",(0,i.kt)("inlineCode",{parentName:"p"},"C")," le contr\xf4leur C'est un mod\xe8le de conception qui a pour but de mieux organiser le code de l'application en le s\xe9parant en 3 couches abstraites distinctes."),(0,i.kt)("p",null,"Imaginez que vous souhaitiez r\xe9aliser une page qui affiche une liste de produits venant d'une base de donn\xe9e. Vous pourriez techniquement tout faire dans un seul et unique fichier PHP. Mais ce code va \xeatre difficile \xe0 maintenir et \xe0 debugger."),(0,i.kt)("p",null,"On pr\xe9f\xe9rera le d\xe9couper en petits morceaux qui auront chacun leur responsabilit\xe9. En suivant un mod\xe8le MVC, on aura alors par exemple 3 fichiers disctincts. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"le premier traitera la partie mod\xe8le, c'est \xe0 dire le code qui va int\xe9ragir avec les donn\xe9es, dans notre cas le code qui va se connecter \xe0 la base de donn\xe9es et r\xe9cup\xe9rer les produits.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"un second fichier traitera la vue, c'est \xe0 dire le c\xf4t\xe9 visuel. On utilisera par exemple un language de templating pour pouvoir \xe9crire dans notre code HTML une boucle qui it\xe8rerait sur chaque produit pour les afficher dans des petites cartes.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"le troisi\xe8me fichier s'occupera de la couche contr\xf4leur, c'est \xe0 dire le code qui ferait le lien entre les deux autres couches. Lorsque le routeur va intercepter une requ\xe8te, il va la diriger vers un contr\xf4leur associ\xe9. C'est ce contr\xf4leur qui fera appel au mod\xe8le pour r\xe9cup\xe9rer les produits et qui utilisera un moteur de template qui prendra en entr\xe9e la vue et les donn\xe9es qu'on a r\xe9cup\xe9r\xe9es depuis le mod\xe8le pour fabriquer la page de sortie, \xe0 savoir notre liste de produits."))),(0,i.kt)("p",null,"Dans notre exemple, nous avons trois fichiers, mais il faut imaginer ces couches comme abstraites. Ainsi, dans Symfony, plusieurs types de fichiers entrent dans la couche ",(0,i.kt)("inlineCode",{parentName:"p"},"mod\xe8le")," (entit\xe9es, repository et manager), on peut faire rentrer le routeur dans la couche ",(0,i.kt)("inlineCode",{parentName:"p"},"contr\xf4leur")," et le JavaScript que vous ajouterez pour dynamiser la page rentrera dans la couche ",(0,i.kt)("inlineCode",{parentName:"p"},"Vue"),"."),(0,i.kt)("h2",{id:"ressources"},"Ressources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://apprendre-la-programmation.net/structurer-code-pattern-mvc/"},"Texte - Structurer votre code avec le pattern MVC"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://nouvelle-techno.fr/articles/live-coding-php-oriente-objet-le-mvc"},"Texte - PHP Orient\xe9 Objet - Le MVC \xc9pisode 1"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://nouvelle-techno.fr/articles/live-coding-php-oriente-objet-le-mvc-episode-2"},"Texte - PHP Orient\xe9 Objet - Le MVC \xc9pisode 2"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=6v8LGDQL9Vs"},"Vid\xe9o - L'architecture MVC"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=a3NZtp3FJEE"},"Vid\xe9o - Cr\xe9er un MVC")))))}d.isMDXComponent=!0}}]);