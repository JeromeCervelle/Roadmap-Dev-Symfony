"use strict";(self.webpackChunkroadmap_symfony=self.webpackChunkroadmap_symfony||[]).push([[8936],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),m=o,y=c["".concat(l,".").concat(m)]||c[m]||d[m]||a;return t?r.createElement(y,s(s({ref:n},u),{},{components:t})):r.createElement(y,s({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},253:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={sidebar_position:5},l="Les mod\xe8les",p={unversionedId:"symfony/modeles",id:"symfony/modeles",isDocsHomePage:!1,title:"Les mod\xe8les",description:"Les mod\xe8les sont une fa\xe7on de repr\xe9senter les donn\xe9es avec lesquelles ont va travailler. Elle viennent la plupart du temps d'une base de donn\xe9es. Avec Symfony, on appelle \xe7a des entit\xe9s. Une entit\xe9 repr\xe9sente une table de la base de donn\xe9es. On y d\xe9finit des propri\xe9t\xe9s qui repr\xe9sentent les champs de la table.",source:"@site/docs/06-symfony/05-modeles.md",sourceDirName:"06-symfony",slug:"/symfony/modeles",permalink:"/Roadmap-Dev-Symfony/docs/symfony/modeles",editUrl:"https://github.com/yoanbernabeu/Roadmap-Dev-Symfony/edit/main/docs/06-symfony/05-modeles.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Twig",permalink:"/Roadmap-Dev-Symfony/docs/symfony/twig"},next:{title:"Les formulaires",permalink:"/Roadmap-Dev-Symfony/docs/symfony/formulaires"}},u=[{value:"Ressources",id:"ressources",children:[],level:2}],d={toc:u};function c(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"les-mod\xe8les"},"Les mod\xe8les"),(0,a.kt)("p",null,"Les mod\xe8les sont une fa\xe7on de repr\xe9senter les donn\xe9es avec lesquelles ont va travailler. Elle viennent la plupart du temps d'une base de donn\xe9es. Avec Symfony, on appelle \xe7a des ",(0,a.kt)("strong",{parentName:"p"},"entit\xe9s"),". Une entit\xe9 repr\xe9sente une table de la base de donn\xe9es. On y d\xe9finit des propri\xe9t\xe9s qui repr\xe9sentent les champs de la table."),(0,a.kt)("p",null,"Chaque propri\xe9t\xe9 d\xe9finit un type de donn\xe9e et \xe9ventuellement sa longueur. On peut aussi sp\xe9cifier des r\xe8gles de validation."),(0,a.kt)("p",null,"On dispose \xe9galement de deux autres classes pour travailler avec notre entit\xe9. Un ",(0,a.kt)("strong",{parentName:"p"},"repository"),", qui est une classe qui va nous servir \xe0 r\xe9cup\xe9rer des donn\xe9es et un ",(0,a.kt)("strong",{parentName:"p"},"Entity manager")," qui va nous servir \xe0 les enregistrer, les mettre \xe0 jour ou les supprimer."),(0,a.kt)("p",null,"Prenons un exemple :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"namespace App\\Entity;\nuse App\\Repository\\PostRepository;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Doctrine\\DBAL\\Types\\Types;\nuse Symfony\\Component\\Validator\\Constraints as Assert;\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\n\n#[ORM\\Entity(repositoryClass: PostRepository::class)]\n#[UniqueEntity(\"title\")]\nclass Post\n{\n    #[ORM\\Id, ORM\\GeneratedValue(strategy: 'AUTO')]\n    #[ORM\\Column(type: Types::INTEGER)]\n    private ?int $id = null;\n\n    #[ORM\\Column(type: Types::STRING, length: 255)]\n    #[Assert\\NotBlank]\n    private string $title;\n\n    #[ORM\\Column(type: Types::TEXT)]\n    #[Assert\\NotBlank]\n    private string $content;\n}\n")),(0,a.kt)("p",null,"Ici, on d\xe9finit une entit\xe9 ",(0,a.kt)("inlineCode",{parentName:"p"},"Post"),". Elle contient trois proprit\xe9s qui sont autant de champs dans la table."),(0,a.kt)("p",null,"La propri\xe9t\xe9 ",(0,a.kt)("inlineCode",{parentName:"p"},"$id")," d\xe9finit un entier pour stocker l'identifiant de l'article, avec une strat\xe9gie d'auto-incr\xe9mentation."),(0,a.kt)("p",null,"La proprit\xe9 ",(0,a.kt)("inlineCode",{parentName:"p"},"$title")," d\xe9finit une cha\xeene de caract\xe8re, de longueur maximale 255 pour stocker le titre de l'article. On sp\xe9cifie \xe9galement qu'elle ne peut pas \xeatre vide."),(0,a.kt)("p",null,"De m\xeame avec la propri\xe9t\xe9 ",(0,a.kt)("inlineCode",{parentName:"p"},"$content")," qui a un type texte long."),(0,a.kt)("p",null,"Lorsqu'on voudra r\xe9cup\xe9rer des donn\xe9es, on fera appel au ",(0,a.kt)("inlineCode",{parentName:"p"},"PostRepository")," en utilisant des m\xe9thodes comme ",(0,a.kt)("inlineCode",{parentName:"p"},"findAll()")," ou ",(0,a.kt)("inlineCode",{parentName:"p"},"findBy()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"public function index(PostRepository $repo): Response\n{\n    $posts = $repo->findAll();\n}\n")),(0,a.kt)("p",null,"Lorsque nous voudrons enregistrer, mettre \xe0 jour ou supprimer des donn\xe9es, on fera appel au ",(0,a.kt)("inlineCode",{parentName:"p"},"EntityManager"),", avec des m\xe9thodes comme ",(0,a.kt)("inlineCode",{parentName:"p"},"persist()")," ou ",(0,a.kt)("inlineCode",{parentName:"p"},"remove()"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"public function deletePost(Post $post = null, EntityManagerInterface $entityManager): Response\n{\n    $entityManager->remove($post);\n    $entityManager->flush();\n}\n")),(0,a.kt)("h2",{id:"ressources"},"Ressources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://grafikart.fr/tutoriels/doctrine-decouverte-1066#autoplay"},"Apprendre \xe0 g\xe9rer les entit\xe9s avec Symfony par Grafikart"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=MhVAwrujifQ&list=PLBq3aRiVuwyzI0MT4LhvwqkVenz5pF_DM&index=3&ab_channel=NouvelleTechno"},"Apprendre \xe0 g\xe9rer les entit\xe9s avec Symfony par Nouvelle-Techno.fr")))))}c.isMDXComponent=!0}}]);