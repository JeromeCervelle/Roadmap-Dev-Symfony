"use strict";(self.webpackChunkroadmap_symfony=self.webpackChunkroadmap_symfony||[]).push([[7117],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return d}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return r?t.createElement(f,i(i({ref:n},u),{},{components:r})):t.createElement(f,i({ref:n},u))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7915:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var t=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={sidebar_position:6},l="La programmation orient\xe9e objet",c={unversionedId:"JavaScript/POO",id:"JavaScript/POO",isDocsHomePage:!1,title:"La programmation orient\xe9e objet",description:"Il serait bien difficule de d\xe9crire en totalit\xe9 les principes de la programmation orient\xe9e objet (POO) en quelques lignes. Nous allons juste voir quelques exemples rapidement.",source:"@site/docs/07-JavaScript/07-POO.md",sourceDirName:"07-JavaScript",slug:"/JavaScript/POO",permalink:"/Roadmap-Dev-Symfony/docs/JavaScript/POO",editUrl:"https://github.com/yoanbernabeu/Roadmap-Dev-Symfony/edit/main/docs/07-JavaScript/07-POO.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Les \xe9v\xeanements",permalink:"/Roadmap-Dev-Symfony/docs/JavaScript/events"},next:{title:"La gestion des erreurs",permalink:"/Roadmap-Dev-Symfony/docs/JavaScript/les-erreurs"}},u=[{value:"Ressources",id:"ressources",children:[],level:2}],p={toc:u};function m(e){var n=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"la-programmation-orient\xe9e-objet"},"La programmation orient\xe9e objet"),(0,o.kt)("p",null,"Il serait bien difficule de d\xe9crire en totalit\xe9 les principes de la programmation orient\xe9e objet (POO) en quelques lignes. Nous allons juste voir quelques exemples rapidement."),(0,o.kt)("p",null,"Imaginons que vous travailliez sur un annuaire. Vous allez donc devoir g\xe9rer des personnes. Chacune aura par exemple un nom, un pr\xe9nom et un email. C'est l'occasion de ce cr\xe9er un type d'objet d\xe9di\xe9, en \xe9crivant ce qu'on appelle une classe."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"class Person {\n    \n    firstname = ''\n    lastname = ''\n    email = ''\n\n    constructor (firstname, lastname, email) {\n        this.firstname = firstname\n        this.lastname = lastname\n        this.email = email\n    }\n}\n")),(0,o.kt)("p",null,"Dans cette classe, on d\xe9finit des propri\xe9t\xe9, auxquelles on assigne une valeur par d\xe9faut, puis gr\xe2ce \xe0 la m\xe9thode ",(0,o.kt)("inlineCode",{parentName:"p"},"constructor")," on assigne les donn\xe9es re\xe7ues \xe0 la construction. Quand on va construire un objet ",(0,o.kt)("inlineCode",{parentName:"p"},"Person"),", on le fera comme ceci :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"const personne = new Person('John', 'Doe', 'john.doe@gmail.com')\n")),(0,o.kt)("p",null,"On pourra acc\xe9der aux proprit\xe9s de l'objet comme avec n'importe quel objet litt\xe9ral (ceux avec les accolades). Ainsi, pour r\xe9cup\xe9rer l'email on \xe9crira ",(0,o.kt)("inlineCode",{parentName:"p"},"personne.email"),"."),(0,o.kt)("p",null,"On peut aussi \xe9crire des m\xe9thodes dans notre classe. Par exemple, rajoutons une m\xe9thode qui renverra une chaine format\xe9e pour afficher la personne :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"class Person {\n    \n    firstname = ''\n    lastname = ''\n    email = ''\n\n    constructor (firstname, lastname, email) {\n        this.firstname = firstname\n        this.lastname = lastname\n        this.email = email\n    }\n\n    getFormated() {\n        return `${this.firstName} ${this.firstName} : ${this.email}` \n    }\n}\n")),(0,o.kt)("p",null,"On pourra donc utiliser cette m\xe9thode sur l'objet en \xe9crivant ",(0,o.kt)("inlineCode",{parentName:"p"},"personne.getFormated()"),". Cela renverra ",(0,o.kt)("inlineCode",{parentName:"p"},"John Doe : john.doe@gmail.com")," Notez qu'on a utilis\xe9 les backticks (le caract\xe8re `) pour \xe9crire notre cha\xeene de carract\xe8re. A l'int\xe9rieur, on utilise ce qu'on appelle l'interpolation de variable, c'est \xe0 dire qu'on les \xe9crit comme suit : ",(0,o.kt)("inlineCode",{parentName:"p"},"${nom_de_la_variable}")),(0,o.kt)("h2",{id:"ressources"},"Ressources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://grafikart.fr/tutoriels/class-2061#autoplay"},"Apprendre \xe0 g\xe9rer les classes par Grafikart"))))}m.isMDXComponent=!0}}]);